<script>
document.addEventListener("DOMContentLoaded", function() {
    var iframe = document.querySelector('iframe');

    // Функция для обновления высоты iframe
    function updateIframeHeight() {
        try {
            var iframeDocument = iframe.contentDocument || iframe.contentWindow.document;
            iframe.style.height = iframeDocument.body.scrollHeight + 'px';
        } catch (error) {
            // Игнорируем ошибки доступа к iframe
        }
    }

    // Функция для отслеживания изменений в классе loader-container
    function observeLoaderContainer() {
        try {
            var iframeDocument = iframe.contentDocument || iframe.contentWindow.document;
            var loaderContainer = iframeDocument.querySelector('.loader-container');
            
            if (loaderContainer) {
                var observer = new MutationObserver(function(mutations) {
                    mutations.forEach(function(mutation) {
                        if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
                            // Проверяем наличие класса 'show'
                            if (!loaderContainer.classList.contains('show')) {
                                // Класс 'show' был убран, обновляем высоту iframe
                                updateIframeHeight();
                            }
                        }
                    });
                });

                // Начинаем наблюдение за изменениями атрибутов
                observer.observe(loaderContainer, { attributes: true });
            }
        } catch (error) {
            // Игнорируем ошибки доступа к iframe
        }
    }

    // Запускаем интервал для проверки содержимого iframe
    var checkIframeContent = setInterval(function() {
        try {
            var iframeDocument = iframe.contentDocument || iframe.contentWindow.document;
            if (iframeDocument.body) {
                // Если содержимое загружено, начинаем отслеживание изменений в классе loader-container
                observeLoaderContainer();
                clearInterval(checkIframeContent); // Останавливаем интервал
            }
        } catch (error) {
            // Игнорируем ошибки доступа к iframe
        }
    }, 100); // Проверяем каждые 100 миллисекунд

    // Также добавляем обработчик события изменения размера окна
    window.addEventListener('resize', updateIframeHeight);
});


</script>
<style>
.wt-lp-iframe-wrapper {
    width: 100%;
}

.wt-lp-iframe-elem {
    width: 100%;
    border: none;
}
</style>
